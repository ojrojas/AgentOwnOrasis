{
  "name": "agentownorasis",
  "displayName": "AgentOwnOrasis",
  "description": "Personal agent IA",
  "version": "0.0.1",
  "publisher": "orojasga",
  "engines": {
    "vscode": "^1.100.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./oroasis/out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "oroasis.updateModels",
        "title": "Oroasis: Update Models"
      },
      {
        "command": "oroasis.helloWorld",
        "title": "Oroasis: Hello World"
      },
      {
        "command": "oroasis.createComment",
        "title": "Oroasis: Create Comment",
        "enablement": "!commentIsEmpty"
      },
      {
        "command": "oroasis.replyComment",
        "title": "Oroasis: Reply Comment",
        "enablement": "!commentIsEmpty"
      },
      {
        "command": "oroasis.editComment",
        "title": "Oroasis: Edit Comment",
        "icon": "$(edit)"
      },
      {
        "command": "oroasis.saveComment",
        "title": "Oroasis Save Comment"
      },
      {
        "command": "oroasis.cancelSaveComment",
        "title": "Oroasis: Cancel Save Comment"
      },
      {
        "command": "oroasis.deleteComment",
        "title": "Oroasis: Delete Comment",
        "icon": "$(trash)"
      },
      {
        "command": "oroasis.deleteAllComments",
        "title": "Oroasis Delete All Comments",
        "icon": "$(trash)"
      },
      {
        "command": "oroasis.openChatAgent",
        "title": "Oroasis: Open Chat Agent"
      },
      {
        "command": "oroasis.askAgent",
        "title": "Oroasis: Ask to Agent"
      },
      {
        "command": "oroasis.editAgent",
        "title": "Oroasis: Edit agent"
      }
    ],
    "configuration": {
      "title": "Oroasis Settings",
      "type": "object",
      "properties": {
        "oroasisSettings.ollamaBaseUrl": {
          "type": "string",
          "default": "http://127.0.0.1:11434",
          "description": "Write the 'Ollama' base url"
        },
        "oroasisSettings.ollamaListModels": {
          "type": "array",
          "description": "List of models from Ollama"
        },
        "oroasisSettings.modelDefault": {
          "type": "string",
          "default": "qwen2.5-coder:3b",
          "description": "Model asigned by request to ollama"
        },
        "oroasisSettings.modelCompletionDefault": {
          "type": "string",
          "default": "qwen2.5-coder:1.5b",
          "description": "Model asigned by request to ollama"
        },
         "oroasisSettings.roleAgentDefault": {
          "type": "string",
          "default": "assistant",
          "description": "The role of the message, either system, user, assistant, or tool"
        },
        "oroasisSettings.templatePromptGenerate": {
          "type": "string",
          "default": "You are my personal 'Agent IA', a highly skilled software engineer with extensive knowledge in many programming languages, frameworks, design patterns, and best practices, you are help me to resolve this question",
          "editPresentation": "multilineText",
          "description": "Template prompt use to generate"
        },
         "oroasisSettings.templatePromptAutoComplete": {
          "type": "string",
          "default": "You are my personal AI that helps me autocomplete programming code, you must determine the language and give me autocomplete of properties, functions, classes, namespaces, conditionals, logical operators, and be very literal, always end your suggestions on a complete sentence:",
          "editPresentation": "multilineText",
          "description": "Template prompt use to generate"
        }
      }
    },
    "menus": {
      "comments/comment/title": [
        {
          "command": "oroasis.editComment",
          "group": "group@1",
          "when": "commentController == oroasisCommentController"
        },
        {
          "command": "oroasis.deleteComment",
          "group": "group@2",
          "when": "commentController == oroasisCommentController && comment == canBeDeleteComment"
        }
      ],
      "commandPalette": [
        {
          "command": "oroasis.createComment",
          "when": "false"
        },
        {
          "command": "oroasis.replyComment",
          "when": "false"
        }
      ],
      "comments/commentThread/context": [
        {
          "command": "oroasis.createComment",
          "group": "inline@1",
          "when": "commentController == oroasisCommentController && commentThreadIsEmpty"
        },
        {
          "command": "oroasis.replyComment",
          "group": "inline@2",
          "when": "commentController == oroasisCommentController && !commentThreadIsEmpty"
        },
        {
          "command": "oroasis.askAgent",
          "group": "inline@3",
          "when": "commentController == oroasisCommentController"
        },
        {
          "command": "oroasis.editAgent",
          "group": "inline@4",
          "when": "commentController == oroasisCommentController"
        }
      ],
      "comments/comment/context": [
        {
          "command": "oroasis.saveComment",
          "group": "inline@2",
          "when": "commentController == oroasisCommentController"
        },
        {
          "command": "oroasis.cancelSaveComment",
          "group": "inline@1",
          "when": "commentController == oroasisCommentController"
        }
      ],
      "comments/commentThread/title": [
        {
          "command": "oroasis.deleteAllComments",
          "group": "navigation",
          "when": "commentController == oroasisCommentController && !commentThreadIsEmpty"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "start:webview": "cd webview-chat && npm run start",
    "build:webview": "cd webview-chat && npm run build",
    "compile": "tsc -b ./",
    "watch": "tsc -b --watch ./",
    "lint": "eslint src",
    "pretest": "npm run compile && npm run lint",
    "test": "vscode-test",
    "postinstall": "cd oroasis && npm install && cd ../webview-chat && npm install && cd .."
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.100.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "eslint": "^9.25.1",
    "typescript": "^5.8.3"
  }
}